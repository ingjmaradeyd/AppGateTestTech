package co.com.appgate.prueba.factory;

import java.math.BigDecimal;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.Invocation.Builder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.google.gson.Gson;

import co.com.appgate.prueba.bo.OperationObject;
import co.com.appgate.prueba.bo.SumObject;
import co.com.appgate.prueba.factory.interfaces.MathOperation;
import reactor.core.publisher.Mono;

@Component
public class SumImpl implements MathOperation{
	
	
	private BigDecimal callServiceSum(BigDecimal number1, BigDecimal number2) {
		String baseUrl = "http://localhost:8090";
		SumObject sumObject = new SumObject();
		sumObject.setNumber1(number1);
		sumObject.setNumber2(number2);
		Gson gson = new Gson();
		String jsonString = gson.toJson(sumObject);
		Client client = ClientBuilder.newClient();
		WebTarget webTarget = client.target(baseUrl + "/sumservice/sumoperation");
		Builder builder = webTarget.request();
		Response response = builder.post(Entity.json(jsonString));
		
		BigDecimal responseBigDecimal = response.readEntity(BigDecimal.class);
		
		return responseBigDecimal;
	}

	@Override
	public BigDecimal operate(OperationObject operationObject) {
		return callServiceSum(operationObject.getNumber1(), operationObject.getNumber2());
	}

}
